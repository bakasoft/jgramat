// Primary
L0E = LiteralValue
    | ReferencedValue
    | @object(`GrpExpr`: "(" ws Expression ws ")")

// +x, -x, not x
L1E = @object(`PosExpr`: "+" i-ws @set(`value`: L0E))
    | @object(`NegExpr`: "-" i-ws @set(`value`: L0E))
    | @object(`ComExpr`: "not" i-ws @set(`value`: L0E))
    | L0E

// x*y, x/y, x%y
L2E = @object(`MulExpr`: @set(`left`: L1E) i-ws "*" i-ws @set(`right`: L2E))
    | @object(`DivExpr`: @set(`left`: L1E) i-ws "/" i-ws @set(`right`: L2E))
    | @object(`ModExpr`: @set(`left`: L1E) i-ws "%" i-ws @set(`right`: L2E))
    | L1E

// x+y, x-y
L3E = @object(`AddExpr`: @set(`left`: L2E) i-ws "+" i-ws @set(`right`: L3E))
    | @object(`SubExpr`: @set(`left`: L2E) i-ws "-" i-ws @set(`right`: L3E))
    | L2E

// x>y, x<y, x>=x, x<=y, x is y, x as y
L4E = @object(`GtrExpr`: @set(`left`: L3E) i-ws ">" i-ws @set(`right`: L4E))
    | @object(`LssExpr`: @set(`left`: L3E) i-ws "<" i-ws @set(`right`: L4E))
    | @object(`GeqExpr`: @set(`left`: L3E) i-ws ">=" i-ws @set(`right`: L4E))
    | @object(`LeqExpr`: @set(`left`: L3E) i-ws "<=" i-ws @set(`right`: L4E))
    | @object(`IsTypeExpr`: @set(`value`: L3E) i-ws "is" i-ws @set(`type`: TypeRef))
    | @object(`AsTypeExpr`: @set(`value`: L3E) i-ws "as" i-ws @set(`type`: TypeRef))
    | L3E

// x==y, x!=y
L5E = @object(`EquExpr`: @set(`left`: L4E) i-ws "==" i-ws @set(`right`: L5E))
    | @object(`NeqExpr`: @set(`left`: L4E) i-ws "!=" i-ws @set(`right`: L5E))
    | L4E

// x and y
L6E = @object(`ConExpr`: @set(`left`: L5E) i-ws "and" i-ws @set(`right`: L6E))
    | L5E

// x or y, x xor y
L7E = @object(`DisExpr`: @set(`left`: L6E) i-ws "or" i-ws @set(`right`: L7E))
    | @object(`XorExpr`: @set(`left`: L6E) i-ws "xor" i-ws @set(`right`: L7E))
    | L6E

// x ?? y
L8E = @object(`NullCoalescing`: @set(`left`: L7E) i-ws "??" i-ws @set(`right`: L8E))
    | L7E

@debug Expression = L8E
