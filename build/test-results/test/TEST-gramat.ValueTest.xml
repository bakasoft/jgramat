<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="gramat.ValueTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2020-10-01T00:18:29" hostname="Sergio-Pedraza.local" time="0.147">
  <properties/>
  <testcase name="simpleRecursive" classname="gramat.ValueTest" time="0.147"/>
  <system-out><![CDATA[========== EXPRESSIONS
->0
0 -> 1 : range "a"\,"z"
0 -> 1 !< makeValue()0
0 -> 1 !> haltValue(default)0
1<=
->2
2 -> 4 : char "{"
2 -> 4 !< makeObject()1
4 -> 6 : string
4 -> 6 !< makeObject()1\
makeAttribute()2\
makeName()3
4 -> 6 !> haltName()3
6 -> 7 : char "\:"
6 -> 7 !< makeObject()1\
makeAttribute()2
7 -> 5 : value
7 -> 5 !< makeObject()1
7 -> 5 !> haltAttribute()2
5 -> 8 : char "\,"
5 -> 8 !< makeObject()1\
makeAttribute()4
8 -> 9 : string
8 -> 9 !< makeObject()1\
makeAttribute()4\
makeName()5
8 -> 9 !> haltName()5
9 -> 10 : char "\:"
9 -> 10 !< makeObject()1\
makeAttribute()4
10 -> 5 : value
10 -> 5 !< makeObject()1
10 -> 5 !> haltAttribute()4
5 -> 3 : char "}"
5 -> 3 !> haltObject()1
4 -> 3 : char "}"
4 -> 3 !> haltObject()1
3<=
->11
11 -> 13 : char "\\u0002"
13 -> 14 : value
14 -> 12 : char "\\u0003"
12<=
->15
15 -> 16 : string
15 -> 16 : object
16<=
->17
17 -> 18 : object-impl
18<=
========== RESOLVED: root
->0
0 -> 10_6_2 : char "\\u0002"
10_6_2 -> 3_7 : range "a"\,"z"
10_6_2 -> 3_7 !< makeRecursion(value)0\
makeRecursion(value)0
10_6_2 -> 4 : char "{"
10_6_2 -> 4 !< makeRecursion(value)0\
makeRecursion(value)0
4 -> 5 : range "a"\,"z"
5 -> 10_6_2 : char "\:"
3_7 -> 8 : char "\,"
3_7 -> 8 !> haltRecursion(value)0\
haltRecursion(value)0
8 -> 9 : range "a"\,"z"
9 -> 10_6_2 : char "\:"
3_7 -> 3_7 : char "}"
3_7 -> 3_7 !> haltRecursion(value)0\
haltRecursion(value)0
4 -> 3_7 : char "}"
3_7 -> 1 : char "\\u0003"
3_7 -> 1 !> haltRecursion(value)0\
haltRecursion(value)0
1<=
========== STATE: root
I 0;
T 0,1
	S "\u0002";

T 1,2
	R makeRecursion(value)
	S a,z;
T 1,3
	R makeRecursion(value)
	S "{";

T 2,2
	S "}"
	R haltRecursion(value);
T 2,4
	S ","
	R haltRecursion(value);
T 2,5
	S "\u0003"
	R haltRecursion(value);

T 3,2
	S "}";
T 3,6
	S a,z;

T 4,7
	S a,z;

A 5;

T 6,1
	S ":";

T 7,1
	S ":";

DEBUG: evaluating {}
DEBUG: transition 0 -> 1 with char "\u0002"
DEBUG: moved to 0
DEBUG: transition 1 -> 2 with range "a","z"
DEBUG: running action makeRecursion(value)0
DEBUG: push call value
DEBUG: moved to 1
DEBUG: transition 2 -> 5 with char "\u0003"
DEBUG: moved to 2
DEBUG: running action haltRecursion(value)0
DEBUG: pop call value
DEBUG: evaluating {}
DEBUG: transition 0 -> 1 with char "\u0002"
DEBUG: moved to 0
DEBUG: transition 1 -> 3 with char "{"
DEBUG: running action makeRecursion(value)0
DEBUG: push call value
DEBUG: moved to 1
DEBUG: transition 3 -> 6 with range "a","z"
DEBUG: moved to 2
DEBUG: transition 6 -> 1 with char ":"
DEBUG: moved to 3
DEBUG: transition 1 -> 2 with range "a","z"
DEBUG: running action makeRecursion(value)0
DEBUG: push call value
DEBUG: moved to 4
DEBUG: transition 2 -> 2 with char "}"
DEBUG: moved to 5
DEBUG: running action haltRecursion(value)0
DEBUG: pop call value
DEBUG: transition 2 -> 5 with char "\u0003"
DEBUG: moved to 6
DEBUG: running action haltRecursion(value)0
DEBUG: pop call value
DEBUG: evaluating {}
DEBUG: transition 0 -> 1 with char "\u0002"
DEBUG: moved to 0
DEBUG: transition 1 -> 3 with char "{"
DEBUG: running action makeRecursion(value)0
DEBUG: push call value
DEBUG: moved to 1
DEBUG: transition 3 -> 6 with range "a","z"
DEBUG: moved to 2
DEBUG: transition 6 -> 1 with char ":"
DEBUG: moved to 3
DEBUG: transition 1 -> 3 with char "{"
DEBUG: running action makeRecursion(value)0
DEBUG: push call value
DEBUG: moved to 4
DEBUG: transition 3 -> 2 with char "}"
DEBUG: moved to 5
DEBUG: transition 2 -> 2 with char "}"
DEBUG: moved to 6
DEBUG: running action haltRecursion(value)0
DEBUG: pop call value
DEBUG: transition 2 -> 5 with char "\u0003"
DEBUG: moved to 7
DEBUG: running action haltRecursion(value)0
DEBUG: pop call value
DEBUG: evaluating {}
DEBUG: transition 0 -> 1 with char "\u0002"
DEBUG: moved to 0
DEBUG: transition 1 -> 3 with char "{"
DEBUG: running action makeRecursion(value)0
DEBUG: push call value
DEBUG: moved to 1
DEBUG: transition 3 -> 6 with range "a","z"
DEBUG: moved to 2
DEBUG: transition 6 -> 1 with char ":"
DEBUG: moved to 3
DEBUG: transition 1 -> 2 with range "a","z"
DEBUG: running action makeRecursion(value)0
DEBUG: push call value
DEBUG: moved to 4
DEBUG: transition 2 -> 4 with char ","
DEBUG: moved to 5
DEBUG: running action haltRecursion(value)0
DEBUG: pop call value
DEBUG: transition 4 -> 7 with range "a","z"
DEBUG: moved to 6
DEBUG: transition 7 -> 1 with char ":"
DEBUG: moved to 7
DEBUG: transition 1 -> 2 with range "a","z"
DEBUG: running action makeRecursion(value)0
DEBUG: push call value
DEBUG: moved to 8
DEBUG: transition 2 -> 2 with char "}"
DEBUG: moved to 9
DEBUG: running action haltRecursion(value)0
DEBUG: pop call value
DEBUG: transition 2 -> 5 with char "\u0003"
DEBUG: moved to 10
DEBUG: running action haltRecursion(value)0
DEBUG: pop call value
DEBUG: evaluating {}
DEBUG: transition 0 -> 1 with char "\u0002"
DEBUG: moved to 0
DEBUG: transition 1 -> 3 with char "{"
DEBUG: running action makeRecursion(value)0
DEBUG: push call value
DEBUG: moved to 1
DEBUG: transition 3 -> 6 with range "a","z"
DEBUG: moved to 2
DEBUG: transition 6 -> 1 with char ":"
DEBUG: moved to 3
DEBUG: transition 1 -> 3 with char "{"
DEBUG: running action makeRecursion(value)0
DEBUG: push call value
DEBUG: moved to 4
DEBUG: transition 3 -> 2 with char "}"
DEBUG: moved to 5
DEBUG: transition 2 -> 4 with char ","
DEBUG: moved to 6
DEBUG: running action haltRecursion(value)0
DEBUG: pop call value
DEBUG: transition 4 -> 7 with range "a","z"
DEBUG: moved to 7
DEBUG: transition 7 -> 1 with char ":"
DEBUG: moved to 8
DEBUG: transition 1 -> 3 with char "{"
DEBUG: running action makeRecursion(value)0
DEBUG: push call value
DEBUG: moved to 9
DEBUG: transition 3 -> 2 with char "}"
DEBUG: moved to 10
DEBUG: transition 2 -> 2 with char "}"
DEBUG: moved to 11
DEBUG: running action haltRecursion(value)0
DEBUG: pop call value
DEBUG: transition 2 -> 5 with char "\u0003"
DEBUG: moved to 12
DEBUG: running action haltRecursion(value)0
DEBUG: pop call value
DEBUG: evaluating {}
DEBUG: transition 0 -> 1 with char "\u0002"
DEBUG: moved to 0
DEBUG: transition 1 -> 3 with char "{"
DEBUG: running action makeRecursion(value)0
DEBUG: push call value
DEBUG: moved to 1
DEBUG: transition 3 -> 6 with range "a","z"
DEBUG: moved to 2
DEBUG: transition 6 -> 1 with char ":"
DEBUG: moved to 3
DEBUG: transition 1 -> 3 with char "{"
DEBUG: running action makeRecursion(value)0
DEBUG: push call value
DEBUG: moved to 4
DEBUG: transition 3 -> 6 with range "a","z"
DEBUG: moved to 5
DEBUG: transition 6 -> 1 with char ":"
DEBUG: moved to 6
DEBUG: transition 1 -> 2 with range "a","z"
DEBUG: running action makeRecursion(value)0
DEBUG: push call value
DEBUG: moved to 7
DEBUG: transition 2 -> 2 with char "}"
DEBUG: moved to 8
DEBUG: running action haltRecursion(value)0
DEBUG: pop call value
DEBUG: transition 2 -> 4 with char ","
DEBUG: moved to 9
DEBUG: running action haltRecursion(value)0
DEBUG: pop call value
DEBUG: transition 4 -> 7 with range "a","z"
DEBUG: moved to 10
DEBUG: transition 7 -> 1 with char ":"
DEBUG: moved to 11
DEBUG: transition 1 -> 3 with char "{"
DEBUG: running action makeRecursion(value)0
DEBUG: push call value
DEBUG: moved to 12
DEBUG: transition 3 -> 6 with range "a","z"
DEBUG: moved to 13
DEBUG: transition 6 -> 1 with char ":"
DEBUG: moved to 14
DEBUG: transition 1 -> 2 with range "a","z"
DEBUG: running action makeRecursion(value)0
DEBUG: push call value
DEBUG: moved to 15
DEBUG: transition 2 -> 2 with char "}"
DEBUG: moved to 16
DEBUG: running action haltRecursion(value)0
DEBUG: pop call value
DEBUG: transition 2 -> 2 with char "}"
DEBUG: moved to 17
DEBUG: running action haltRecursion(value)0
DEBUG: pop call value
DEBUG: transition 2 -> 5 with char "\u0003"
DEBUG: moved to 18
DEBUG: running action haltRecursion(value)0
DEBUG: pop call value
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
